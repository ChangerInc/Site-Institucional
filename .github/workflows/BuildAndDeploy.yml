name: Build, Push to Docker Hub, and Deploy Nginx Website (with Localhost Check)

on:
  push:
    branches: [ main ]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}  
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}  

jobs:
  BuildAndDeploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3


      # - name: Verify for 'localhost' in src directory
      #   run: |
      #     if grep -rl 'localhost' /home/runner/work/Site-Institucional/Site-Institucional/src/; then
      #       echo "TIRA O LOCALHOST CORNO"
      #       grep -rl 'localhost' /home/runner/work/Site-Institucional/Site-Institucional/src/
      #       exit 1
      #     else
      #       echo "No 'localhost' references found in /home/runner/work/Site-Institucional/Site-Institucional/src/."
      #     fi

      - name: Login to Docker Hub (using encrypted credentials)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push image to Docker Hub
        run: |
          docker build -t leonardopradosptech/changer:latest .
          docker push leonardopradosptech/changer:latest

      - name: Check "changer" instance with AWS CLI
        run: |
          # Get instance status
          INSTANCE_STATUS=$(aws ec2 describe-instances --filters "Name:tag:Name,Values:changer" | jq -r '.Reservations[].Instances[].State.Name')

          # Check if instance is running
          if [[ "${INSTANCE_STATUS}" != "running" ]]; then
            echo "Error: changer instance is not running!"

            # Configure AWS CLI for notifications (replace with your setup)
            # ... (e.g., configure SNS topic or other notification service)

            # Send notification (replace with your notification command)
            # aws sns publish --topic-arn <your-topic-arn> --message "changer instance down!"
            exit 1
          fi

          echo "changer instance is up and running!"


      - uses: appleboy/ssh-action@v1.0.3  # You can choose a different version
        with:
          host: "44.217.150.7"  # Server hostname
          username: "ubuntu"  # Username for server
          key: ${{ secrets.CHANGER }}  # Reference your PEM key secret
          script: sudo docker pull leonardopradosptech/changer | sleep 3 | sudo docker run -p 80:80 -p 8080:8080 -p 443:443 leonardopradosptech/changer

      - name: Pull the image (on the server)
        run: |


      - name: Run the container (on the server)
        run: |
          ssh docker run -p 80:80 -p 8080:8080 -p 443:443 leonardopradosptech/changer
